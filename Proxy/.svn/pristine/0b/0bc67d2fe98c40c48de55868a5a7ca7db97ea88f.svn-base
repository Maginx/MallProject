//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProxyClient.DataService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Step", Namespace="http://schemas.datacontract.org/2004/07/MallHost")]
    public enum Step : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecordTime = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualWashBeginStep = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualWashEndStep = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstWashBeginStep = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstWashEndStep = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnzymeWashBeginStep = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnzymeWashEndStep = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CleanOutWashBeginStep = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CleanOutWashEndStep = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DipInWashSecBeginStep = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DipInWashSecEndStep = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DipInWashBeginStep = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DipInWashEndStep = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastWashBeginStep = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastWashEndStep = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastWashSecBeginStep = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastWashSecEndStep = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.IMallProxy")]
    public interface IMallProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/ChechDinInSec", ReplyAction="http://tempuri.org/IMallProxy/ChechDinInSecResponse")]
        bool ChechDinInSec(string endoscopeSN);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/ChechDinInSec", ReplyAction="http://tempuri.org/IMallProxy/ChechDinInSecResponse")]
        System.IAsyncResult BeginChechDinInSec(string endoscopeSN, System.AsyncCallback callback, object asyncState);
        
        bool EndChechDinInSec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/GetUserEndoscopeMsgBySIM", ReplyAction="http://tempuri.org/IMallProxy/GetUserEndoscopeMsgBySIMResponse")]
        System.Collections.Generic.List<string> GetUserEndoscopeMsgBySIM(string sim);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/GetUserEndoscopeMsgBySIM", ReplyAction="http://tempuri.org/IMallProxy/GetUserEndoscopeMsgBySIMResponse")]
        System.IAsyncResult BeginGetUserEndoscopeMsgBySIM(string sim, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetUserEndoscopeMsgBySIM(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/RecordEveryCleanStep", ReplyAction="http://tempuri.org/IMallProxy/RecordEveryCleanStepResponse")]
        bool RecordEveryCleanStep(ProxyClient.DataService.Step step, System.DateTime beginTime, string endoscopeSN);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/RecordEveryCleanStep", ReplyAction="http://tempuri.org/IMallProxy/RecordEveryCleanStepResponse")]
        System.IAsyncResult BeginRecordEveryCleanStep(ProxyClient.DataService.Step step, System.DateTime beginTime, string endoscopeSN, System.AsyncCallback callback, object asyncState);
        
        bool EndRecordEveryCleanStep(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/ResetEndoscopeMsg", ReplyAction="http://tempuri.org/IMallProxy/ResetEndoscopeMsgResponse")]
        bool ResetEndoscopeMsg(string endoscopeSN, string endoscopeSIM, string washerNo, string washerRealName, string cleanType, string disinfection, string autoClean);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/ResetEndoscopeMsg", ReplyAction="http://tempuri.org/IMallProxy/ResetEndoscopeMsgResponse")]
        System.IAsyncResult BeginResetEndoscopeMsg(string endoscopeSN, string endoscopeSIM, string washerNo, string washerRealName, string cleanType, string disinfection, string autoClean, System.AsyncCallback callback, object asyncState);
        
        bool EndResetEndoscopeMsg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/GetLatestCleanMsgByEndoscopeSN", ReplyAction="http://tempuri.org/IMallProxy/GetLatestCleanMsgByEndoscopeSNResponse")]
        ClassLibrary.EndoscopeTemp GetLatestCleanMsgByEndoscopeSN(string endoscopeSN);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/GetLatestCleanMsgByEndoscopeSN", ReplyAction="http://tempuri.org/IMallProxy/GetLatestCleanMsgByEndoscopeSNResponse")]
        System.IAsyncResult BeginGetLatestCleanMsgByEndoscopeSN(string endoscopeSN, System.AsyncCallback callback, object asyncState);
        
        ClassLibrary.EndoscopeTemp EndGetLatestCleanMsgByEndoscopeSN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/SureRecordBySN", ReplyAction="http://tempuri.org/IMallProxy/SureRecordBySNResponse")]
        bool SureRecordBySN(string endoscopeSN, string totalTime, string checkTime, string checkNo, string checkRealName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/SureRecordBySN", ReplyAction="http://tempuri.org/IMallProxy/SureRecordBySNResponse")]
        System.IAsyncResult BeginSureRecordBySN(string endoscopeSN, string totalTime, string checkTime, string checkNo, string checkRealName, System.AsyncCallback callback, object asyncState);
        
        bool EndSureRecordBySN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/CheckOneCol", ReplyAction="http://tempuri.org/IMallProxy/CheckOneColResponse")]
        bool CheckOneCol(string endoscopeSN, string col, string table);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/CheckOneCol", ReplyAction="http://tempuri.org/IMallProxy/CheckOneColResponse")]
        System.IAsyncResult BeginCheckOneCol(string endoscopeSN, string col, string table, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckOneCol(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/CleanQulified", ReplyAction="http://tempuri.org/IMallProxy/CleanQulifiedResponse")]
        bool CleanQulified(string endoscopeSN, string qulified);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/CleanQulified", ReplyAction="http://tempuri.org/IMallProxy/CleanQulifiedResponse")]
        System.IAsyncResult BeginCleanQulified(string endoscopeSN, string qulified, System.AsyncCallback callback, object asyncState);
        
        bool EndCleanQulified(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/SetAutoCleanNo", ReplyAction="http://tempuri.org/IMallProxy/SetAutoCleanNoResponse")]
        bool SetAutoCleanNo(string endoscopeSN, string cleanNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/SetAutoCleanNo", ReplyAction="http://tempuri.org/IMallProxy/SetAutoCleanNoResponse")]
        System.IAsyncResult BeginSetAutoCleanNo(string endoscopeSN, string cleanNo, System.AsyncCallback callback, object asyncState);
        
        bool EndSetAutoCleanNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/ModifyUser", ReplyAction="http://tempuri.org/IMallProxy/ModifyUserResponse")]
        bool ModifyUser(ClassLibrary.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/ModifyUser", ReplyAction="http://tempuri.org/IMallProxy/ModifyUserResponse")]
        System.IAsyncResult BeginModifyUser(ClassLibrary.UserInfo userInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndModifyUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/ModifyEndoscope", ReplyAction="http://tempuri.org/IMallProxy/ModifyEndoscopeResponse")]
        bool ModifyEndoscope(ClassLibrary.EndoscopeInfo endoscopeInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/ModifyEndoscope", ReplyAction="http://tempuri.org/IMallProxy/ModifyEndoscopeResponse")]
        System.IAsyncResult BeginModifyEndoscope(ClassLibrary.EndoscopeInfo endoscopeInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndModifyEndoscope(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/DeleteEndoscope", ReplyAction="http://tempuri.org/IMallProxy/DeleteEndoscopeResponse")]
        bool DeleteEndoscope(string condition);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/DeleteEndoscope", ReplyAction="http://tempuri.org/IMallProxy/DeleteEndoscopeResponse")]
        System.IAsyncResult BeginDeleteEndoscope(string condition, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteEndoscope(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/DeleteUser", ReplyAction="http://tempuri.org/IMallProxy/DeleteUserResponse")]
        bool DeleteUser(string condition);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/DeleteUser", ReplyAction="http://tempuri.org/IMallProxy/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(string condition, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoadEndoscopeMsg", ReplyAction="http://tempuri.org/IMallProxy/LoadEndoscopeMsgResponse")]
        System.Collections.Generic.List<ClassLibrary.EndoscopeInfo> LoadEndoscopeMsg();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoadEndoscopeMsg", ReplyAction="http://tempuri.org/IMallProxy/LoadEndoscopeMsgResponse")]
        System.IAsyncResult BeginLoadEndoscopeMsg(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClassLibrary.EndoscopeInfo> EndLoadEndoscopeMsg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoadUserMsg", ReplyAction="http://tempuri.org/IMallProxy/LoadUserMsgResponse")]
        System.Collections.Generic.List<ClassLibrary.UserInfo> LoadUserMsg();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoadUserMsg", ReplyAction="http://tempuri.org/IMallProxy/LoadUserMsgResponse")]
        System.IAsyncResult BeginLoadUserMsg(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClassLibrary.UserInfo> EndLoadUserMsg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/SearchTrace", ReplyAction="http://tempuri.org/IMallProxy/SearchTraceResponse")]
        string SearchTrace(string sqlStr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/SearchTrace", ReplyAction="http://tempuri.org/IMallProxy/SearchTraceResponse")]
        System.IAsyncResult BeginSearchTrace(string sqlStr, System.AsyncCallback callback, object asyncState);
        
        string EndSearchTrace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/SearchFirstWash", ReplyAction="http://tempuri.org/IMallProxy/SearchFirstWashResponse")]
        string SearchFirstWash(string begin, string end);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/SearchFirstWash", ReplyAction="http://tempuri.org/IMallProxy/SearchFirstWashResponse")]
        System.IAsyncResult BeginSearchFirstWash(string begin, string end, System.AsyncCallback callback, object asyncState);
        
        string EndSearchFirstWash(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/SearchSecondWash", ReplyAction="http://tempuri.org/IMallProxy/SearchSecondWashResponse")]
        string SearchSecondWash(string begin, string end);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/SearchSecondWash", ReplyAction="http://tempuri.org/IMallProxy/SearchSecondWashResponse")]
        System.IAsyncResult BeginSearchSecondWash(string begin, string end, System.AsyncCallback callback, object asyncState);
        
        string EndSearchSecondWash(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/GetSearchResultByName", ReplyAction="http://tempuri.org/IMallProxy/GetSearchResultByNameResponse")]
        string GetSearchResultByName(string condition, string value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/GetSearchResultByName", ReplyAction="http://tempuri.org/IMallProxy/GetSearchResultByNameResponse")]
        System.IAsyncResult BeginGetSearchResultByName(string condition, string value, System.AsyncCallback callback, object asyncState);
        
        string EndGetSearchResultByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoginUser", ReplyAction="http://tempuri.org/IMallProxy/LoginUserResponse")]
        string LoginUser(string userName, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoginUser", ReplyAction="http://tempuri.org/IMallProxy/LoginUserResponse")]
        System.IAsyncResult BeginLoginUser(string userName, string passWord, System.AsyncCallback callback, object asyncState);
        
        string EndLoginUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoadPatients", ReplyAction="http://tempuri.org/IMallProxy/LoadPatientsResponse")]
        System.Collections.Generic.List<ClassLibrary.Patient> LoadPatients();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoadPatients", ReplyAction="http://tempuri.org/IMallProxy/LoadPatientsResponse")]
        System.IAsyncResult BeginLoadPatients(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClassLibrary.Patient> EndLoadPatients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/RegisterPatient", ReplyAction="http://tempuri.org/IMallProxy/RegisterPatientResponse")]
        bool RegisterPatient(ClassLibrary.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/RegisterPatient", ReplyAction="http://tempuri.org/IMallProxy/RegisterPatientResponse")]
        System.IAsyncResult BeginRegisterPatient(ClassLibrary.Patient patient, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterPatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/DeletePatients", ReplyAction="http://tempuri.org/IMallProxy/DeletePatientsResponse")]
        bool DeletePatients(string sn);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/DeletePatients", ReplyAction="http://tempuri.org/IMallProxy/DeletePatientsResponse")]
        System.IAsyncResult BeginDeletePatients(string sn, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletePatients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/UpdateTracData", ReplyAction="http://tempuri.org/IMallProxy/UpdateTracDataResponse")]
        bool UpdateTracData(string endoscop, string wareNo, string doctorName, string patientNO, string patientName, string nurseNO, string patientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/UpdateTracData", ReplyAction="http://tempuri.org/IMallProxy/UpdateTracDataResponse")]
        System.IAsyncResult BeginUpdateTracData(string endoscop, string wareNo, string doctorName, string patientNO, string patientName, string nurseNO, string patientId, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateTracData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoadUserInfos", ReplyAction="http://tempuri.org/IMallProxy/LoadUserInfosResponse")]
        System.Collections.Generic.List<string> LoadUserInfos(ClassLibrary.UserRole userRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoadUserInfos", ReplyAction="http://tempuri.org/IMallProxy/LoadUserInfosResponse")]
        System.IAsyncResult BeginLoadUserInfos(ClassLibrary.UserRole userRole, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndLoadUserInfos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoadWareinfos", ReplyAction="http://tempuri.org/IMallProxy/LoadWareinfosResponse")]
        System.Collections.Generic.List<string> LoadWareinfos();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoadWareinfos", ReplyAction="http://tempuri.org/IMallProxy/LoadWareinfosResponse")]
        System.IAsyncResult BeginLoadWareinfos(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndLoadWareinfos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/LoadEndsocopeNames", ReplyAction="http://tempuri.org/IMallProxy/LoadEndsocopeNamesResponse")]
        System.Collections.Generic.List<string> LoadEndsocopeNames();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/LoadEndsocopeNames", ReplyAction="http://tempuri.org/IMallProxy/LoadEndsocopeNamesResponse")]
        System.IAsyncResult BeginLoadEndsocopeNames(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndLoadEndsocopeNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMallProxy/EndoscopeIsQuality", ReplyAction="http://tempuri.org/IMallProxy/EndoscopeIsQualityResponse")]
        bool EndoscopeIsQuality(string en);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMallProxy/EndoscopeIsQuality", ReplyAction="http://tempuri.org/IMallProxy/EndoscopeIsQualityResponse")]
        System.IAsyncResult BeginEndoscopeIsQuality(string en, System.AsyncCallback callback, object asyncState);
        
        bool EndEndoscopeIsQuality(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMallProxyChannel : ProxyClient.DataService.IMallProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChechDinInSecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChechDinInSecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserEndoscopeMsgBySIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserEndoscopeMsgBySIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordEveryCleanStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecordEveryCleanStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetEndoscopeMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetEndoscopeMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestCleanMsgByEndoscopeSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestCleanMsgByEndoscopeSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClassLibrary.EndoscopeTemp Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClassLibrary.EndoscopeTemp)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SureRecordBySNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SureRecordBySNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckOneColCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckOneColCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CleanQulifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CleanQulifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetAutoCleanNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetAutoCleanNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyEndoscopeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyEndoscopeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteEndoscopeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteEndoscopeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadEndoscopeMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadEndoscopeMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClassLibrary.EndoscopeInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClassLibrary.EndoscopeInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadUserMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadUserMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClassLibrary.UserInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClassLibrary.UserInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchTraceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchTraceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchFirstWashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchFirstWashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchSecondWashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchSecondWashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSearchResultByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSearchResultByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClassLibrary.Patient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClassLibrary.Patient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateTracDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTracDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadUserInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadUserInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadWareinfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadWareinfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadEndsocopeNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadEndsocopeNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EndoscopeIsQualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EndoscopeIsQualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MallProxyClient : System.ServiceModel.ClientBase<ProxyClient.DataService.IMallProxy>, ProxyClient.DataService.IMallProxy {
        
        private BeginOperationDelegate onBeginChechDinInSecDelegate;
        
        private EndOperationDelegate onEndChechDinInSecDelegate;
        
        private System.Threading.SendOrPostCallback onChechDinInSecCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserEndoscopeMsgBySIMDelegate;
        
        private EndOperationDelegate onEndGetUserEndoscopeMsgBySIMDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserEndoscopeMsgBySIMCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecordEveryCleanStepDelegate;
        
        private EndOperationDelegate onEndRecordEveryCleanStepDelegate;
        
        private System.Threading.SendOrPostCallback onRecordEveryCleanStepCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetEndoscopeMsgDelegate;
        
        private EndOperationDelegate onEndResetEndoscopeMsgDelegate;
        
        private System.Threading.SendOrPostCallback onResetEndoscopeMsgCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestCleanMsgByEndoscopeSNDelegate;
        
        private EndOperationDelegate onEndGetLatestCleanMsgByEndoscopeSNDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestCleanMsgByEndoscopeSNCompletedDelegate;
        
        private BeginOperationDelegate onBeginSureRecordBySNDelegate;
        
        private EndOperationDelegate onEndSureRecordBySNDelegate;
        
        private System.Threading.SendOrPostCallback onSureRecordBySNCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckOneColDelegate;
        
        private EndOperationDelegate onEndCheckOneColDelegate;
        
        private System.Threading.SendOrPostCallback onCheckOneColCompletedDelegate;
        
        private BeginOperationDelegate onBeginCleanQulifiedDelegate;
        
        private EndOperationDelegate onEndCleanQulifiedDelegate;
        
        private System.Threading.SendOrPostCallback onCleanQulifiedCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAutoCleanNoDelegate;
        
        private EndOperationDelegate onEndSetAutoCleanNoDelegate;
        
        private System.Threading.SendOrPostCallback onSetAutoCleanNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyUserDelegate;
        
        private EndOperationDelegate onEndModifyUserDelegate;
        
        private System.Threading.SendOrPostCallback onModifyUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyEndoscopeDelegate;
        
        private EndOperationDelegate onEndModifyEndoscopeDelegate;
        
        private System.Threading.SendOrPostCallback onModifyEndoscopeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEndoscopeDelegate;
        
        private EndOperationDelegate onEndDeleteEndoscopeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEndoscopeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadEndoscopeMsgDelegate;
        
        private EndOperationDelegate onEndLoadEndoscopeMsgDelegate;
        
        private System.Threading.SendOrPostCallback onLoadEndoscopeMsgCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadUserMsgDelegate;
        
        private EndOperationDelegate onEndLoadUserMsgDelegate;
        
        private System.Threading.SendOrPostCallback onLoadUserMsgCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchTraceDelegate;
        
        private EndOperationDelegate onEndSearchTraceDelegate;
        
        private System.Threading.SendOrPostCallback onSearchTraceCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchFirstWashDelegate;
        
        private EndOperationDelegate onEndSearchFirstWashDelegate;
        
        private System.Threading.SendOrPostCallback onSearchFirstWashCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchSecondWashDelegate;
        
        private EndOperationDelegate onEndSearchSecondWashDelegate;
        
        private System.Threading.SendOrPostCallback onSearchSecondWashCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSearchResultByNameDelegate;
        
        private EndOperationDelegate onEndGetSearchResultByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetSearchResultByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginUserDelegate;
        
        private EndOperationDelegate onEndLoginUserDelegate;
        
        private System.Threading.SendOrPostCallback onLoginUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadPatientsDelegate;
        
        private EndOperationDelegate onEndLoadPatientsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadPatientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterPatientDelegate;
        
        private EndOperationDelegate onEndRegisterPatientDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterPatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePatientsDelegate;
        
        private EndOperationDelegate onEndDeletePatientsDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePatientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTracDataDelegate;
        
        private EndOperationDelegate onEndUpdateTracDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTracDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadUserInfosDelegate;
        
        private EndOperationDelegate onEndLoadUserInfosDelegate;
        
        private System.Threading.SendOrPostCallback onLoadUserInfosCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadWareinfosDelegate;
        
        private EndOperationDelegate onEndLoadWareinfosDelegate;
        
        private System.Threading.SendOrPostCallback onLoadWareinfosCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadEndsocopeNamesDelegate;
        
        private EndOperationDelegate onEndLoadEndsocopeNamesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadEndsocopeNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginEndoscopeIsQualityDelegate;
        
        private EndOperationDelegate onEndEndoscopeIsQualityDelegate;
        
        private System.Threading.SendOrPostCallback onEndoscopeIsQualityCompletedDelegate;
        
        public MallProxyClient() {
        }
        
        public MallProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MallProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MallProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MallProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ChechDinInSecCompletedEventArgs> ChechDinInSecCompleted;
        
        public event System.EventHandler<GetUserEndoscopeMsgBySIMCompletedEventArgs> GetUserEndoscopeMsgBySIMCompleted;
        
        public event System.EventHandler<RecordEveryCleanStepCompletedEventArgs> RecordEveryCleanStepCompleted;
        
        public event System.EventHandler<ResetEndoscopeMsgCompletedEventArgs> ResetEndoscopeMsgCompleted;
        
        public event System.EventHandler<GetLatestCleanMsgByEndoscopeSNCompletedEventArgs> GetLatestCleanMsgByEndoscopeSNCompleted;
        
        public event System.EventHandler<SureRecordBySNCompletedEventArgs> SureRecordBySNCompleted;
        
        public event System.EventHandler<CheckOneColCompletedEventArgs> CheckOneColCompleted;
        
        public event System.EventHandler<CleanQulifiedCompletedEventArgs> CleanQulifiedCompleted;
        
        public event System.EventHandler<SetAutoCleanNoCompletedEventArgs> SetAutoCleanNoCompleted;
        
        public event System.EventHandler<ModifyUserCompletedEventArgs> ModifyUserCompleted;
        
        public event System.EventHandler<ModifyEndoscopeCompletedEventArgs> ModifyEndoscopeCompleted;
        
        public event System.EventHandler<DeleteEndoscopeCompletedEventArgs> DeleteEndoscopeCompleted;
        
        public event System.EventHandler<DeleteUserCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<LoadEndoscopeMsgCompletedEventArgs> LoadEndoscopeMsgCompleted;
        
        public event System.EventHandler<LoadUserMsgCompletedEventArgs> LoadUserMsgCompleted;
        
        public event System.EventHandler<SearchTraceCompletedEventArgs> SearchTraceCompleted;
        
        public event System.EventHandler<SearchFirstWashCompletedEventArgs> SearchFirstWashCompleted;
        
        public event System.EventHandler<SearchSecondWashCompletedEventArgs> SearchSecondWashCompleted;
        
        public event System.EventHandler<GetSearchResultByNameCompletedEventArgs> GetSearchResultByNameCompleted;
        
        public event System.EventHandler<LoginUserCompletedEventArgs> LoginUserCompleted;
        
        public event System.EventHandler<LoadPatientsCompletedEventArgs> LoadPatientsCompleted;
        
        public event System.EventHandler<RegisterPatientCompletedEventArgs> RegisterPatientCompleted;
        
        public event System.EventHandler<DeletePatientsCompletedEventArgs> DeletePatientsCompleted;
        
        public event System.EventHandler<UpdateTracDataCompletedEventArgs> UpdateTracDataCompleted;
        
        public event System.EventHandler<LoadUserInfosCompletedEventArgs> LoadUserInfosCompleted;
        
        public event System.EventHandler<LoadWareinfosCompletedEventArgs> LoadWareinfosCompleted;
        
        public event System.EventHandler<LoadEndsocopeNamesCompletedEventArgs> LoadEndsocopeNamesCompleted;
        
        public event System.EventHandler<EndoscopeIsQualityCompletedEventArgs> EndoscopeIsQualityCompleted;
        
        public bool ChechDinInSec(string endoscopeSN) {
            return base.Channel.ChechDinInSec(endoscopeSN);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChechDinInSec(string endoscopeSN, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChechDinInSec(endoscopeSN, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndChechDinInSec(System.IAsyncResult result) {
            return base.Channel.EndChechDinInSec(result);
        }
        
        private System.IAsyncResult OnBeginChechDinInSec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            return this.BeginChechDinInSec(endoscopeSN, callback, asyncState);
        }
        
        private object[] OnEndChechDinInSec(System.IAsyncResult result) {
            bool retVal = this.EndChechDinInSec(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChechDinInSecCompleted(object state) {
            if ((this.ChechDinInSecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChechDinInSecCompleted(this, new ChechDinInSecCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChechDinInSecAsync(string endoscopeSN) {
            this.ChechDinInSecAsync(endoscopeSN, null);
        }
        
        public void ChechDinInSecAsync(string endoscopeSN, object userState) {
            if ((this.onBeginChechDinInSecDelegate == null)) {
                this.onBeginChechDinInSecDelegate = new BeginOperationDelegate(this.OnBeginChechDinInSec);
            }
            if ((this.onEndChechDinInSecDelegate == null)) {
                this.onEndChechDinInSecDelegate = new EndOperationDelegate(this.OnEndChechDinInSec);
            }
            if ((this.onChechDinInSecCompletedDelegate == null)) {
                this.onChechDinInSecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChechDinInSecCompleted);
            }
            base.InvokeAsync(this.onBeginChechDinInSecDelegate, new object[] {
                        endoscopeSN}, this.onEndChechDinInSecDelegate, this.onChechDinInSecCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> GetUserEndoscopeMsgBySIM(string sim) {
            return base.Channel.GetUserEndoscopeMsgBySIM(sim);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserEndoscopeMsgBySIM(string sim, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserEndoscopeMsgBySIM(sim, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetUserEndoscopeMsgBySIM(System.IAsyncResult result) {
            return base.Channel.EndGetUserEndoscopeMsgBySIM(result);
        }
        
        private System.IAsyncResult OnBeginGetUserEndoscopeMsgBySIM(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sim = ((string)(inValues[0]));
            return this.BeginGetUserEndoscopeMsgBySIM(sim, callback, asyncState);
        }
        
        private object[] OnEndGetUserEndoscopeMsgBySIM(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetUserEndoscopeMsgBySIM(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserEndoscopeMsgBySIMCompleted(object state) {
            if ((this.GetUserEndoscopeMsgBySIMCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserEndoscopeMsgBySIMCompleted(this, new GetUserEndoscopeMsgBySIMCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserEndoscopeMsgBySIMAsync(string sim) {
            this.GetUserEndoscopeMsgBySIMAsync(sim, null);
        }
        
        public void GetUserEndoscopeMsgBySIMAsync(string sim, object userState) {
            if ((this.onBeginGetUserEndoscopeMsgBySIMDelegate == null)) {
                this.onBeginGetUserEndoscopeMsgBySIMDelegate = new BeginOperationDelegate(this.OnBeginGetUserEndoscopeMsgBySIM);
            }
            if ((this.onEndGetUserEndoscopeMsgBySIMDelegate == null)) {
                this.onEndGetUserEndoscopeMsgBySIMDelegate = new EndOperationDelegate(this.OnEndGetUserEndoscopeMsgBySIM);
            }
            if ((this.onGetUserEndoscopeMsgBySIMCompletedDelegate == null)) {
                this.onGetUserEndoscopeMsgBySIMCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserEndoscopeMsgBySIMCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserEndoscopeMsgBySIMDelegate, new object[] {
                        sim}, this.onEndGetUserEndoscopeMsgBySIMDelegate, this.onGetUserEndoscopeMsgBySIMCompletedDelegate, userState);
        }
        
        public bool RecordEveryCleanStep(ProxyClient.DataService.Step step, System.DateTime beginTime, string endoscopeSN) {
            return base.Channel.RecordEveryCleanStep(step, beginTime, endoscopeSN);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRecordEveryCleanStep(ProxyClient.DataService.Step step, System.DateTime beginTime, string endoscopeSN, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecordEveryCleanStep(step, beginTime, endoscopeSN, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRecordEveryCleanStep(System.IAsyncResult result) {
            return base.Channel.EndRecordEveryCleanStep(result);
        }
        
        private System.IAsyncResult OnBeginRecordEveryCleanStep(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ProxyClient.DataService.Step step = ((ProxyClient.DataService.Step)(inValues[0]));
            System.DateTime beginTime = ((System.DateTime)(inValues[1]));
            string endoscopeSN = ((string)(inValues[2]));
            return this.BeginRecordEveryCleanStep(step, beginTime, endoscopeSN, callback, asyncState);
        }
        
        private object[] OnEndRecordEveryCleanStep(System.IAsyncResult result) {
            bool retVal = this.EndRecordEveryCleanStep(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecordEveryCleanStepCompleted(object state) {
            if ((this.RecordEveryCleanStepCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecordEveryCleanStepCompleted(this, new RecordEveryCleanStepCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecordEveryCleanStepAsync(ProxyClient.DataService.Step step, System.DateTime beginTime, string endoscopeSN) {
            this.RecordEveryCleanStepAsync(step, beginTime, endoscopeSN, null);
        }
        
        public void RecordEveryCleanStepAsync(ProxyClient.DataService.Step step, System.DateTime beginTime, string endoscopeSN, object userState) {
            if ((this.onBeginRecordEveryCleanStepDelegate == null)) {
                this.onBeginRecordEveryCleanStepDelegate = new BeginOperationDelegate(this.OnBeginRecordEveryCleanStep);
            }
            if ((this.onEndRecordEveryCleanStepDelegate == null)) {
                this.onEndRecordEveryCleanStepDelegate = new EndOperationDelegate(this.OnEndRecordEveryCleanStep);
            }
            if ((this.onRecordEveryCleanStepCompletedDelegate == null)) {
                this.onRecordEveryCleanStepCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecordEveryCleanStepCompleted);
            }
            base.InvokeAsync(this.onBeginRecordEveryCleanStepDelegate, new object[] {
                        step,
                        beginTime,
                        endoscopeSN}, this.onEndRecordEveryCleanStepDelegate, this.onRecordEveryCleanStepCompletedDelegate, userState);
        }
        
        public bool ResetEndoscopeMsg(string endoscopeSN, string endoscopeSIM, string washerNo, string washerRealName, string cleanType, string disinfection, string autoClean) {
            return base.Channel.ResetEndoscopeMsg(endoscopeSN, endoscopeSIM, washerNo, washerRealName, cleanType, disinfection, autoClean);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetEndoscopeMsg(string endoscopeSN, string endoscopeSIM, string washerNo, string washerRealName, string cleanType, string disinfection, string autoClean, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetEndoscopeMsg(endoscopeSN, endoscopeSIM, washerNo, washerRealName, cleanType, disinfection, autoClean, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndResetEndoscopeMsg(System.IAsyncResult result) {
            return base.Channel.EndResetEndoscopeMsg(result);
        }
        
        private System.IAsyncResult OnBeginResetEndoscopeMsg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            string endoscopeSIM = ((string)(inValues[1]));
            string washerNo = ((string)(inValues[2]));
            string washerRealName = ((string)(inValues[3]));
            string cleanType = ((string)(inValues[4]));
            string disinfection = ((string)(inValues[5]));
            string autoClean = ((string)(inValues[6]));
            return this.BeginResetEndoscopeMsg(endoscopeSN, endoscopeSIM, washerNo, washerRealName, cleanType, disinfection, autoClean, callback, asyncState);
        }
        
        private object[] OnEndResetEndoscopeMsg(System.IAsyncResult result) {
            bool retVal = this.EndResetEndoscopeMsg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetEndoscopeMsgCompleted(object state) {
            if ((this.ResetEndoscopeMsgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetEndoscopeMsgCompleted(this, new ResetEndoscopeMsgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetEndoscopeMsgAsync(string endoscopeSN, string endoscopeSIM, string washerNo, string washerRealName, string cleanType, string disinfection, string autoClean) {
            this.ResetEndoscopeMsgAsync(endoscopeSN, endoscopeSIM, washerNo, washerRealName, cleanType, disinfection, autoClean, null);
        }
        
        public void ResetEndoscopeMsgAsync(string endoscopeSN, string endoscopeSIM, string washerNo, string washerRealName, string cleanType, string disinfection, string autoClean, object userState) {
            if ((this.onBeginResetEndoscopeMsgDelegate == null)) {
                this.onBeginResetEndoscopeMsgDelegate = new BeginOperationDelegate(this.OnBeginResetEndoscopeMsg);
            }
            if ((this.onEndResetEndoscopeMsgDelegate == null)) {
                this.onEndResetEndoscopeMsgDelegate = new EndOperationDelegate(this.OnEndResetEndoscopeMsg);
            }
            if ((this.onResetEndoscopeMsgCompletedDelegate == null)) {
                this.onResetEndoscopeMsgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetEndoscopeMsgCompleted);
            }
            base.InvokeAsync(this.onBeginResetEndoscopeMsgDelegate, new object[] {
                        endoscopeSN,
                        endoscopeSIM,
                        washerNo,
                        washerRealName,
                        cleanType,
                        disinfection,
                        autoClean}, this.onEndResetEndoscopeMsgDelegate, this.onResetEndoscopeMsgCompletedDelegate, userState);
        }
        
        public ClassLibrary.EndoscopeTemp GetLatestCleanMsgByEndoscopeSN(string endoscopeSN) {
            return base.Channel.GetLatestCleanMsgByEndoscopeSN(endoscopeSN);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestCleanMsgByEndoscopeSN(string endoscopeSN, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestCleanMsgByEndoscopeSN(endoscopeSN, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ClassLibrary.EndoscopeTemp EndGetLatestCleanMsgByEndoscopeSN(System.IAsyncResult result) {
            return base.Channel.EndGetLatestCleanMsgByEndoscopeSN(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestCleanMsgByEndoscopeSN(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            return this.BeginGetLatestCleanMsgByEndoscopeSN(endoscopeSN, callback, asyncState);
        }
        
        private object[] OnEndGetLatestCleanMsgByEndoscopeSN(System.IAsyncResult result) {
            ClassLibrary.EndoscopeTemp retVal = this.EndGetLatestCleanMsgByEndoscopeSN(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestCleanMsgByEndoscopeSNCompleted(object state) {
            if ((this.GetLatestCleanMsgByEndoscopeSNCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestCleanMsgByEndoscopeSNCompleted(this, new GetLatestCleanMsgByEndoscopeSNCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestCleanMsgByEndoscopeSNAsync(string endoscopeSN) {
            this.GetLatestCleanMsgByEndoscopeSNAsync(endoscopeSN, null);
        }
        
        public void GetLatestCleanMsgByEndoscopeSNAsync(string endoscopeSN, object userState) {
            if ((this.onBeginGetLatestCleanMsgByEndoscopeSNDelegate == null)) {
                this.onBeginGetLatestCleanMsgByEndoscopeSNDelegate = new BeginOperationDelegate(this.OnBeginGetLatestCleanMsgByEndoscopeSN);
            }
            if ((this.onEndGetLatestCleanMsgByEndoscopeSNDelegate == null)) {
                this.onEndGetLatestCleanMsgByEndoscopeSNDelegate = new EndOperationDelegate(this.OnEndGetLatestCleanMsgByEndoscopeSN);
            }
            if ((this.onGetLatestCleanMsgByEndoscopeSNCompletedDelegate == null)) {
                this.onGetLatestCleanMsgByEndoscopeSNCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestCleanMsgByEndoscopeSNCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestCleanMsgByEndoscopeSNDelegate, new object[] {
                        endoscopeSN}, this.onEndGetLatestCleanMsgByEndoscopeSNDelegate, this.onGetLatestCleanMsgByEndoscopeSNCompletedDelegate, userState);
        }
        
        public bool SureRecordBySN(string endoscopeSN, string totalTime, string checkTime, string checkNo, string checkRealName) {
            return base.Channel.SureRecordBySN(endoscopeSN, totalTime, checkTime, checkNo, checkRealName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSureRecordBySN(string endoscopeSN, string totalTime, string checkTime, string checkNo, string checkRealName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSureRecordBySN(endoscopeSN, totalTime, checkTime, checkNo, checkRealName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSureRecordBySN(System.IAsyncResult result) {
            return base.Channel.EndSureRecordBySN(result);
        }
        
        private System.IAsyncResult OnBeginSureRecordBySN(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            string totalTime = ((string)(inValues[1]));
            string checkTime = ((string)(inValues[2]));
            string checkNo = ((string)(inValues[3]));
            string checkRealName = ((string)(inValues[4]));
            return this.BeginSureRecordBySN(endoscopeSN, totalTime, checkTime, checkNo, checkRealName, callback, asyncState);
        }
        
        private object[] OnEndSureRecordBySN(System.IAsyncResult result) {
            bool retVal = this.EndSureRecordBySN(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSureRecordBySNCompleted(object state) {
            if ((this.SureRecordBySNCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SureRecordBySNCompleted(this, new SureRecordBySNCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SureRecordBySNAsync(string endoscopeSN, string totalTime, string checkTime, string checkNo, string checkRealName) {
            this.SureRecordBySNAsync(endoscopeSN, totalTime, checkTime, checkNo, checkRealName, null);
        }
        
        public void SureRecordBySNAsync(string endoscopeSN, string totalTime, string checkTime, string checkNo, string checkRealName, object userState) {
            if ((this.onBeginSureRecordBySNDelegate == null)) {
                this.onBeginSureRecordBySNDelegate = new BeginOperationDelegate(this.OnBeginSureRecordBySN);
            }
            if ((this.onEndSureRecordBySNDelegate == null)) {
                this.onEndSureRecordBySNDelegate = new EndOperationDelegate(this.OnEndSureRecordBySN);
            }
            if ((this.onSureRecordBySNCompletedDelegate == null)) {
                this.onSureRecordBySNCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSureRecordBySNCompleted);
            }
            base.InvokeAsync(this.onBeginSureRecordBySNDelegate, new object[] {
                        endoscopeSN,
                        totalTime,
                        checkTime,
                        checkNo,
                        checkRealName}, this.onEndSureRecordBySNDelegate, this.onSureRecordBySNCompletedDelegate, userState);
        }
        
        public bool CheckOneCol(string endoscopeSN, string col, string table) {
            return base.Channel.CheckOneCol(endoscopeSN, col, table);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckOneCol(string endoscopeSN, string col, string table, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckOneCol(endoscopeSN, col, table, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckOneCol(System.IAsyncResult result) {
            return base.Channel.EndCheckOneCol(result);
        }
        
        private System.IAsyncResult OnBeginCheckOneCol(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            string col = ((string)(inValues[1]));
            string table = ((string)(inValues[2]));
            return this.BeginCheckOneCol(endoscopeSN, col, table, callback, asyncState);
        }
        
        private object[] OnEndCheckOneCol(System.IAsyncResult result) {
            bool retVal = this.EndCheckOneCol(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckOneColCompleted(object state) {
            if ((this.CheckOneColCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckOneColCompleted(this, new CheckOneColCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckOneColAsync(string endoscopeSN, string col, string table) {
            this.CheckOneColAsync(endoscopeSN, col, table, null);
        }
        
        public void CheckOneColAsync(string endoscopeSN, string col, string table, object userState) {
            if ((this.onBeginCheckOneColDelegate == null)) {
                this.onBeginCheckOneColDelegate = new BeginOperationDelegate(this.OnBeginCheckOneCol);
            }
            if ((this.onEndCheckOneColDelegate == null)) {
                this.onEndCheckOneColDelegate = new EndOperationDelegate(this.OnEndCheckOneCol);
            }
            if ((this.onCheckOneColCompletedDelegate == null)) {
                this.onCheckOneColCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckOneColCompleted);
            }
            base.InvokeAsync(this.onBeginCheckOneColDelegate, new object[] {
                        endoscopeSN,
                        col,
                        table}, this.onEndCheckOneColDelegate, this.onCheckOneColCompletedDelegate, userState);
        }
        
        public bool CleanQulified(string endoscopeSN, string qulified) {
            return base.Channel.CleanQulified(endoscopeSN, qulified);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCleanQulified(string endoscopeSN, string qulified, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCleanQulified(endoscopeSN, qulified, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCleanQulified(System.IAsyncResult result) {
            return base.Channel.EndCleanQulified(result);
        }
        
        private System.IAsyncResult OnBeginCleanQulified(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            string qulified = ((string)(inValues[1]));
            return this.BeginCleanQulified(endoscopeSN, qulified, callback, asyncState);
        }
        
        private object[] OnEndCleanQulified(System.IAsyncResult result) {
            bool retVal = this.EndCleanQulified(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCleanQulifiedCompleted(object state) {
            if ((this.CleanQulifiedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CleanQulifiedCompleted(this, new CleanQulifiedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CleanQulifiedAsync(string endoscopeSN, string qulified) {
            this.CleanQulifiedAsync(endoscopeSN, qulified, null);
        }
        
        public void CleanQulifiedAsync(string endoscopeSN, string qulified, object userState) {
            if ((this.onBeginCleanQulifiedDelegate == null)) {
                this.onBeginCleanQulifiedDelegate = new BeginOperationDelegate(this.OnBeginCleanQulified);
            }
            if ((this.onEndCleanQulifiedDelegate == null)) {
                this.onEndCleanQulifiedDelegate = new EndOperationDelegate(this.OnEndCleanQulified);
            }
            if ((this.onCleanQulifiedCompletedDelegate == null)) {
                this.onCleanQulifiedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCleanQulifiedCompleted);
            }
            base.InvokeAsync(this.onBeginCleanQulifiedDelegate, new object[] {
                        endoscopeSN,
                        qulified}, this.onEndCleanQulifiedDelegate, this.onCleanQulifiedCompletedDelegate, userState);
        }
        
        public bool SetAutoCleanNo(string endoscopeSN, string cleanNo) {
            return base.Channel.SetAutoCleanNo(endoscopeSN, cleanNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAutoCleanNo(string endoscopeSN, string cleanNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAutoCleanNo(endoscopeSN, cleanNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetAutoCleanNo(System.IAsyncResult result) {
            return base.Channel.EndSetAutoCleanNo(result);
        }
        
        private System.IAsyncResult OnBeginSetAutoCleanNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscopeSN = ((string)(inValues[0]));
            string cleanNo = ((string)(inValues[1]));
            return this.BeginSetAutoCleanNo(endoscopeSN, cleanNo, callback, asyncState);
        }
        
        private object[] OnEndSetAutoCleanNo(System.IAsyncResult result) {
            bool retVal = this.EndSetAutoCleanNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetAutoCleanNoCompleted(object state) {
            if ((this.SetAutoCleanNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAutoCleanNoCompleted(this, new SetAutoCleanNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAutoCleanNoAsync(string endoscopeSN, string cleanNo) {
            this.SetAutoCleanNoAsync(endoscopeSN, cleanNo, null);
        }
        
        public void SetAutoCleanNoAsync(string endoscopeSN, string cleanNo, object userState) {
            if ((this.onBeginSetAutoCleanNoDelegate == null)) {
                this.onBeginSetAutoCleanNoDelegate = new BeginOperationDelegate(this.OnBeginSetAutoCleanNo);
            }
            if ((this.onEndSetAutoCleanNoDelegate == null)) {
                this.onEndSetAutoCleanNoDelegate = new EndOperationDelegate(this.OnEndSetAutoCleanNo);
            }
            if ((this.onSetAutoCleanNoCompletedDelegate == null)) {
                this.onSetAutoCleanNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAutoCleanNoCompleted);
            }
            base.InvokeAsync(this.onBeginSetAutoCleanNoDelegate, new object[] {
                        endoscopeSN,
                        cleanNo}, this.onEndSetAutoCleanNoDelegate, this.onSetAutoCleanNoCompletedDelegate, userState);
        }
        
        public bool ModifyUser(ClassLibrary.UserInfo userInfo) {
            return base.Channel.ModifyUser(userInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginModifyUser(ClassLibrary.UserInfo userInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyUser(userInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndModifyUser(System.IAsyncResult result) {
            return base.Channel.EndModifyUser(result);
        }
        
        private System.IAsyncResult OnBeginModifyUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClassLibrary.UserInfo userInfo = ((ClassLibrary.UserInfo)(inValues[0]));
            return this.BeginModifyUser(userInfo, callback, asyncState);
        }
        
        private object[] OnEndModifyUser(System.IAsyncResult result) {
            bool retVal = this.EndModifyUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyUserCompleted(object state) {
            if ((this.ModifyUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyUserCompleted(this, new ModifyUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyUserAsync(ClassLibrary.UserInfo userInfo) {
            this.ModifyUserAsync(userInfo, null);
        }
        
        public void ModifyUserAsync(ClassLibrary.UserInfo userInfo, object userState) {
            if ((this.onBeginModifyUserDelegate == null)) {
                this.onBeginModifyUserDelegate = new BeginOperationDelegate(this.OnBeginModifyUser);
            }
            if ((this.onEndModifyUserDelegate == null)) {
                this.onEndModifyUserDelegate = new EndOperationDelegate(this.OnEndModifyUser);
            }
            if ((this.onModifyUserCompletedDelegate == null)) {
                this.onModifyUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyUserCompleted);
            }
            base.InvokeAsync(this.onBeginModifyUserDelegate, new object[] {
                        userInfo}, this.onEndModifyUserDelegate, this.onModifyUserCompletedDelegate, userState);
        }
        
        public bool ModifyEndoscope(ClassLibrary.EndoscopeInfo endoscopeInfo) {
            return base.Channel.ModifyEndoscope(endoscopeInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginModifyEndoscope(ClassLibrary.EndoscopeInfo endoscopeInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyEndoscope(endoscopeInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndModifyEndoscope(System.IAsyncResult result) {
            return base.Channel.EndModifyEndoscope(result);
        }
        
        private System.IAsyncResult OnBeginModifyEndoscope(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClassLibrary.EndoscopeInfo endoscopeInfo = ((ClassLibrary.EndoscopeInfo)(inValues[0]));
            return this.BeginModifyEndoscope(endoscopeInfo, callback, asyncState);
        }
        
        private object[] OnEndModifyEndoscope(System.IAsyncResult result) {
            bool retVal = this.EndModifyEndoscope(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyEndoscopeCompleted(object state) {
            if ((this.ModifyEndoscopeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyEndoscopeCompleted(this, new ModifyEndoscopeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyEndoscopeAsync(ClassLibrary.EndoscopeInfo endoscopeInfo) {
            this.ModifyEndoscopeAsync(endoscopeInfo, null);
        }
        
        public void ModifyEndoscopeAsync(ClassLibrary.EndoscopeInfo endoscopeInfo, object userState) {
            if ((this.onBeginModifyEndoscopeDelegate == null)) {
                this.onBeginModifyEndoscopeDelegate = new BeginOperationDelegate(this.OnBeginModifyEndoscope);
            }
            if ((this.onEndModifyEndoscopeDelegate == null)) {
                this.onEndModifyEndoscopeDelegate = new EndOperationDelegate(this.OnEndModifyEndoscope);
            }
            if ((this.onModifyEndoscopeCompletedDelegate == null)) {
                this.onModifyEndoscopeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyEndoscopeCompleted);
            }
            base.InvokeAsync(this.onBeginModifyEndoscopeDelegate, new object[] {
                        endoscopeInfo}, this.onEndModifyEndoscopeDelegate, this.onModifyEndoscopeCompletedDelegate, userState);
        }
        
        public bool DeleteEndoscope(string condition) {
            return base.Channel.DeleteEndoscope(condition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteEndoscope(string condition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEndoscope(condition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteEndoscope(System.IAsyncResult result) {
            return base.Channel.EndDeleteEndoscope(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEndoscope(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string condition = ((string)(inValues[0]));
            return this.BeginDeleteEndoscope(condition, callback, asyncState);
        }
        
        private object[] OnEndDeleteEndoscope(System.IAsyncResult result) {
            bool retVal = this.EndDeleteEndoscope(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteEndoscopeCompleted(object state) {
            if ((this.DeleteEndoscopeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEndoscopeCompleted(this, new DeleteEndoscopeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEndoscopeAsync(string condition) {
            this.DeleteEndoscopeAsync(condition, null);
        }
        
        public void DeleteEndoscopeAsync(string condition, object userState) {
            if ((this.onBeginDeleteEndoscopeDelegate == null)) {
                this.onBeginDeleteEndoscopeDelegate = new BeginOperationDelegate(this.OnBeginDeleteEndoscope);
            }
            if ((this.onEndDeleteEndoscopeDelegate == null)) {
                this.onEndDeleteEndoscopeDelegate = new EndOperationDelegate(this.OnEndDeleteEndoscope);
            }
            if ((this.onDeleteEndoscopeCompletedDelegate == null)) {
                this.onDeleteEndoscopeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEndoscopeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEndoscopeDelegate, new object[] {
                        condition}, this.onEndDeleteEndoscopeDelegate, this.onDeleteEndoscopeCompletedDelegate, userState);
        }
        
        public bool DeleteUser(string condition) {
            return base.Channel.DeleteUser(condition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUser(string condition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(condition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string condition = ((string)(inValues[0]));
            return this.BeginDeleteUser(condition, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            bool retVal = this.EndDeleteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(string condition) {
            this.DeleteUserAsync(condition, null);
        }
        
        public void DeleteUserAsync(string condition, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        condition}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ClassLibrary.EndoscopeInfo> LoadEndoscopeMsg() {
            return base.Channel.LoadEndoscopeMsg();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadEndoscopeMsg(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadEndoscopeMsg(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClassLibrary.EndoscopeInfo> EndLoadEndoscopeMsg(System.IAsyncResult result) {
            return base.Channel.EndLoadEndoscopeMsg(result);
        }
        
        private System.IAsyncResult OnBeginLoadEndoscopeMsg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadEndoscopeMsg(callback, asyncState);
        }
        
        private object[] OnEndLoadEndoscopeMsg(System.IAsyncResult result) {
            System.Collections.Generic.List<ClassLibrary.EndoscopeInfo> retVal = this.EndLoadEndoscopeMsg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadEndoscopeMsgCompleted(object state) {
            if ((this.LoadEndoscopeMsgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadEndoscopeMsgCompleted(this, new LoadEndoscopeMsgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadEndoscopeMsgAsync() {
            this.LoadEndoscopeMsgAsync(null);
        }
        
        public void LoadEndoscopeMsgAsync(object userState) {
            if ((this.onBeginLoadEndoscopeMsgDelegate == null)) {
                this.onBeginLoadEndoscopeMsgDelegate = new BeginOperationDelegate(this.OnBeginLoadEndoscopeMsg);
            }
            if ((this.onEndLoadEndoscopeMsgDelegate == null)) {
                this.onEndLoadEndoscopeMsgDelegate = new EndOperationDelegate(this.OnEndLoadEndoscopeMsg);
            }
            if ((this.onLoadEndoscopeMsgCompletedDelegate == null)) {
                this.onLoadEndoscopeMsgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadEndoscopeMsgCompleted);
            }
            base.InvokeAsync(this.onBeginLoadEndoscopeMsgDelegate, null, this.onEndLoadEndoscopeMsgDelegate, this.onLoadEndoscopeMsgCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ClassLibrary.UserInfo> LoadUserMsg() {
            return base.Channel.LoadUserMsg();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadUserMsg(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadUserMsg(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClassLibrary.UserInfo> EndLoadUserMsg(System.IAsyncResult result) {
            return base.Channel.EndLoadUserMsg(result);
        }
        
        private System.IAsyncResult OnBeginLoadUserMsg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadUserMsg(callback, asyncState);
        }
        
        private object[] OnEndLoadUserMsg(System.IAsyncResult result) {
            System.Collections.Generic.List<ClassLibrary.UserInfo> retVal = this.EndLoadUserMsg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadUserMsgCompleted(object state) {
            if ((this.LoadUserMsgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadUserMsgCompleted(this, new LoadUserMsgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadUserMsgAsync() {
            this.LoadUserMsgAsync(null);
        }
        
        public void LoadUserMsgAsync(object userState) {
            if ((this.onBeginLoadUserMsgDelegate == null)) {
                this.onBeginLoadUserMsgDelegate = new BeginOperationDelegate(this.OnBeginLoadUserMsg);
            }
            if ((this.onEndLoadUserMsgDelegate == null)) {
                this.onEndLoadUserMsgDelegate = new EndOperationDelegate(this.OnEndLoadUserMsg);
            }
            if ((this.onLoadUserMsgCompletedDelegate == null)) {
                this.onLoadUserMsgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadUserMsgCompleted);
            }
            base.InvokeAsync(this.onBeginLoadUserMsgDelegate, null, this.onEndLoadUserMsgDelegate, this.onLoadUserMsgCompletedDelegate, userState);
        }
        
        public string SearchTrace(string sqlStr) {
            return base.Channel.SearchTrace(sqlStr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchTrace(string sqlStr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchTrace(sqlStr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSearchTrace(System.IAsyncResult result) {
            return base.Channel.EndSearchTrace(result);
        }
        
        private System.IAsyncResult OnBeginSearchTrace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqlStr = ((string)(inValues[0]));
            return this.BeginSearchTrace(sqlStr, callback, asyncState);
        }
        
        private object[] OnEndSearchTrace(System.IAsyncResult result) {
            string retVal = this.EndSearchTrace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchTraceCompleted(object state) {
            if ((this.SearchTraceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchTraceCompleted(this, new SearchTraceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchTraceAsync(string sqlStr) {
            this.SearchTraceAsync(sqlStr, null);
        }
        
        public void SearchTraceAsync(string sqlStr, object userState) {
            if ((this.onBeginSearchTraceDelegate == null)) {
                this.onBeginSearchTraceDelegate = new BeginOperationDelegate(this.OnBeginSearchTrace);
            }
            if ((this.onEndSearchTraceDelegate == null)) {
                this.onEndSearchTraceDelegate = new EndOperationDelegate(this.OnEndSearchTrace);
            }
            if ((this.onSearchTraceCompletedDelegate == null)) {
                this.onSearchTraceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchTraceCompleted);
            }
            base.InvokeAsync(this.onBeginSearchTraceDelegate, new object[] {
                        sqlStr}, this.onEndSearchTraceDelegate, this.onSearchTraceCompletedDelegate, userState);
        }
        
        public string SearchFirstWash(string begin, string end) {
            return base.Channel.SearchFirstWash(begin, end);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchFirstWash(string begin, string end, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchFirstWash(begin, end, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSearchFirstWash(System.IAsyncResult result) {
            return base.Channel.EndSearchFirstWash(result);
        }
        
        private System.IAsyncResult OnBeginSearchFirstWash(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string begin = ((string)(inValues[0]));
            string end = ((string)(inValues[1]));
            return this.BeginSearchFirstWash(begin, end, callback, asyncState);
        }
        
        private object[] OnEndSearchFirstWash(System.IAsyncResult result) {
            string retVal = this.EndSearchFirstWash(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchFirstWashCompleted(object state) {
            if ((this.SearchFirstWashCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchFirstWashCompleted(this, new SearchFirstWashCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchFirstWashAsync(string begin, string end) {
            this.SearchFirstWashAsync(begin, end, null);
        }
        
        public void SearchFirstWashAsync(string begin, string end, object userState) {
            if ((this.onBeginSearchFirstWashDelegate == null)) {
                this.onBeginSearchFirstWashDelegate = new BeginOperationDelegate(this.OnBeginSearchFirstWash);
            }
            if ((this.onEndSearchFirstWashDelegate == null)) {
                this.onEndSearchFirstWashDelegate = new EndOperationDelegate(this.OnEndSearchFirstWash);
            }
            if ((this.onSearchFirstWashCompletedDelegate == null)) {
                this.onSearchFirstWashCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchFirstWashCompleted);
            }
            base.InvokeAsync(this.onBeginSearchFirstWashDelegate, new object[] {
                        begin,
                        end}, this.onEndSearchFirstWashDelegate, this.onSearchFirstWashCompletedDelegate, userState);
        }
        
        public string SearchSecondWash(string begin, string end) {
            return base.Channel.SearchSecondWash(begin, end);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchSecondWash(string begin, string end, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchSecondWash(begin, end, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSearchSecondWash(System.IAsyncResult result) {
            return base.Channel.EndSearchSecondWash(result);
        }
        
        private System.IAsyncResult OnBeginSearchSecondWash(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string begin = ((string)(inValues[0]));
            string end = ((string)(inValues[1]));
            return this.BeginSearchSecondWash(begin, end, callback, asyncState);
        }
        
        private object[] OnEndSearchSecondWash(System.IAsyncResult result) {
            string retVal = this.EndSearchSecondWash(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchSecondWashCompleted(object state) {
            if ((this.SearchSecondWashCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchSecondWashCompleted(this, new SearchSecondWashCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchSecondWashAsync(string begin, string end) {
            this.SearchSecondWashAsync(begin, end, null);
        }
        
        public void SearchSecondWashAsync(string begin, string end, object userState) {
            if ((this.onBeginSearchSecondWashDelegate == null)) {
                this.onBeginSearchSecondWashDelegate = new BeginOperationDelegate(this.OnBeginSearchSecondWash);
            }
            if ((this.onEndSearchSecondWashDelegate == null)) {
                this.onEndSearchSecondWashDelegate = new EndOperationDelegate(this.OnEndSearchSecondWash);
            }
            if ((this.onSearchSecondWashCompletedDelegate == null)) {
                this.onSearchSecondWashCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchSecondWashCompleted);
            }
            base.InvokeAsync(this.onBeginSearchSecondWashDelegate, new object[] {
                        begin,
                        end}, this.onEndSearchSecondWashDelegate, this.onSearchSecondWashCompletedDelegate, userState);
        }
        
        public string GetSearchResultByName(string condition, string value) {
            return base.Channel.GetSearchResultByName(condition, value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSearchResultByName(string condition, string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSearchResultByName(condition, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSearchResultByName(System.IAsyncResult result) {
            return base.Channel.EndGetSearchResultByName(result);
        }
        
        private System.IAsyncResult OnBeginGetSearchResultByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string condition = ((string)(inValues[0]));
            string value = ((string)(inValues[1]));
            return this.BeginGetSearchResultByName(condition, value, callback, asyncState);
        }
        
        private object[] OnEndGetSearchResultByName(System.IAsyncResult result) {
            string retVal = this.EndGetSearchResultByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSearchResultByNameCompleted(object state) {
            if ((this.GetSearchResultByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSearchResultByNameCompleted(this, new GetSearchResultByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSearchResultByNameAsync(string condition, string value) {
            this.GetSearchResultByNameAsync(condition, value, null);
        }
        
        public void GetSearchResultByNameAsync(string condition, string value, object userState) {
            if ((this.onBeginGetSearchResultByNameDelegate == null)) {
                this.onBeginGetSearchResultByNameDelegate = new BeginOperationDelegate(this.OnBeginGetSearchResultByName);
            }
            if ((this.onEndGetSearchResultByNameDelegate == null)) {
                this.onEndGetSearchResultByNameDelegate = new EndOperationDelegate(this.OnEndGetSearchResultByName);
            }
            if ((this.onGetSearchResultByNameCompletedDelegate == null)) {
                this.onGetSearchResultByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSearchResultByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetSearchResultByNameDelegate, new object[] {
                        condition,
                        value}, this.onEndGetSearchResultByNameDelegate, this.onGetSearchResultByNameCompletedDelegate, userState);
        }
        
        public string LoginUser(string userName, string passWord) {
            return base.Channel.LoginUser(userName, passWord);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginUser(string userName, string passWord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginUser(userName, passWord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLoginUser(System.IAsyncResult result) {
            return base.Channel.EndLoginUser(result);
        }
        
        private System.IAsyncResult OnBeginLoginUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string passWord = ((string)(inValues[1]));
            return this.BeginLoginUser(userName, passWord, callback, asyncState);
        }
        
        private object[] OnEndLoginUser(System.IAsyncResult result) {
            string retVal = this.EndLoginUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginUserCompleted(object state) {
            if ((this.LoginUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginUserAsync(string userName, string passWord) {
            this.LoginUserAsync(userName, passWord, null);
        }
        
        public void LoginUserAsync(string userName, string passWord, object userState) {
            if ((this.onBeginLoginUserDelegate == null)) {
                this.onBeginLoginUserDelegate = new BeginOperationDelegate(this.OnBeginLoginUser);
            }
            if ((this.onEndLoginUserDelegate == null)) {
                this.onEndLoginUserDelegate = new EndOperationDelegate(this.OnEndLoginUser);
            }
            if ((this.onLoginUserCompletedDelegate == null)) {
                this.onLoginUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginUserCompleted);
            }
            base.InvokeAsync(this.onBeginLoginUserDelegate, new object[] {
                        userName,
                        passWord}, this.onEndLoginUserDelegate, this.onLoginUserCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ClassLibrary.Patient> LoadPatients() {
            return base.Channel.LoadPatients();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadPatients(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadPatients(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClassLibrary.Patient> EndLoadPatients(System.IAsyncResult result) {
            return base.Channel.EndLoadPatients(result);
        }
        
        private System.IAsyncResult OnBeginLoadPatients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadPatients(callback, asyncState);
        }
        
        private object[] OnEndLoadPatients(System.IAsyncResult result) {
            System.Collections.Generic.List<ClassLibrary.Patient> retVal = this.EndLoadPatients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadPatientsCompleted(object state) {
            if ((this.LoadPatientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadPatientsCompleted(this, new LoadPatientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadPatientsAsync() {
            this.LoadPatientsAsync(null);
        }
        
        public void LoadPatientsAsync(object userState) {
            if ((this.onBeginLoadPatientsDelegate == null)) {
                this.onBeginLoadPatientsDelegate = new BeginOperationDelegate(this.OnBeginLoadPatients);
            }
            if ((this.onEndLoadPatientsDelegate == null)) {
                this.onEndLoadPatientsDelegate = new EndOperationDelegate(this.OnEndLoadPatients);
            }
            if ((this.onLoadPatientsCompletedDelegate == null)) {
                this.onLoadPatientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadPatientsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadPatientsDelegate, null, this.onEndLoadPatientsDelegate, this.onLoadPatientsCompletedDelegate, userState);
        }
        
        public bool RegisterPatient(ClassLibrary.Patient patient) {
            return base.Channel.RegisterPatient(patient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterPatient(ClassLibrary.Patient patient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterPatient(patient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRegisterPatient(System.IAsyncResult result) {
            return base.Channel.EndRegisterPatient(result);
        }
        
        private System.IAsyncResult OnBeginRegisterPatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClassLibrary.Patient patient = ((ClassLibrary.Patient)(inValues[0]));
            return this.BeginRegisterPatient(patient, callback, asyncState);
        }
        
        private object[] OnEndRegisterPatient(System.IAsyncResult result) {
            bool retVal = this.EndRegisterPatient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterPatientCompleted(object state) {
            if ((this.RegisterPatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterPatientCompleted(this, new RegisterPatientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterPatientAsync(ClassLibrary.Patient patient) {
            this.RegisterPatientAsync(patient, null);
        }
        
        public void RegisterPatientAsync(ClassLibrary.Patient patient, object userState) {
            if ((this.onBeginRegisterPatientDelegate == null)) {
                this.onBeginRegisterPatientDelegate = new BeginOperationDelegate(this.OnBeginRegisterPatient);
            }
            if ((this.onEndRegisterPatientDelegate == null)) {
                this.onEndRegisterPatientDelegate = new EndOperationDelegate(this.OnEndRegisterPatient);
            }
            if ((this.onRegisterPatientCompletedDelegate == null)) {
                this.onRegisterPatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterPatientCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterPatientDelegate, new object[] {
                        patient}, this.onEndRegisterPatientDelegate, this.onRegisterPatientCompletedDelegate, userState);
        }
        
        public bool DeletePatients(string sn) {
            return base.Channel.DeletePatients(sn);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePatients(string sn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePatients(sn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeletePatients(System.IAsyncResult result) {
            return base.Channel.EndDeletePatients(result);
        }
        
        private System.IAsyncResult OnBeginDeletePatients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sn = ((string)(inValues[0]));
            return this.BeginDeletePatients(sn, callback, asyncState);
        }
        
        private object[] OnEndDeletePatients(System.IAsyncResult result) {
            bool retVal = this.EndDeletePatients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePatientsCompleted(object state) {
            if ((this.DeletePatientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePatientsCompleted(this, new DeletePatientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePatientsAsync(string sn) {
            this.DeletePatientsAsync(sn, null);
        }
        
        public void DeletePatientsAsync(string sn, object userState) {
            if ((this.onBeginDeletePatientsDelegate == null)) {
                this.onBeginDeletePatientsDelegate = new BeginOperationDelegate(this.OnBeginDeletePatients);
            }
            if ((this.onEndDeletePatientsDelegate == null)) {
                this.onEndDeletePatientsDelegate = new EndOperationDelegate(this.OnEndDeletePatients);
            }
            if ((this.onDeletePatientsCompletedDelegate == null)) {
                this.onDeletePatientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePatientsCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePatientsDelegate, new object[] {
                        sn}, this.onEndDeletePatientsDelegate, this.onDeletePatientsCompletedDelegate, userState);
        }
        
        public bool UpdateTracData(string endoscop, string wareNo, string doctorName, string patientNO, string patientName, string nurseNO, string patientId) {
            return base.Channel.UpdateTracData(endoscop, wareNo, doctorName, patientNO, patientName, nurseNO, patientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTracData(string endoscop, string wareNo, string doctorName, string patientNO, string patientName, string nurseNO, string patientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTracData(endoscop, wareNo, doctorName, patientNO, patientName, nurseNO, patientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateTracData(System.IAsyncResult result) {
            return base.Channel.EndUpdateTracData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTracData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string endoscop = ((string)(inValues[0]));
            string wareNo = ((string)(inValues[1]));
            string doctorName = ((string)(inValues[2]));
            string patientNO = ((string)(inValues[3]));
            string patientName = ((string)(inValues[4]));
            string nurseNO = ((string)(inValues[5]));
            string patientId = ((string)(inValues[6]));
            return this.BeginUpdateTracData(endoscop, wareNo, doctorName, patientNO, patientName, nurseNO, patientId, callback, asyncState);
        }
        
        private object[] OnEndUpdateTracData(System.IAsyncResult result) {
            bool retVal = this.EndUpdateTracData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateTracDataCompleted(object state) {
            if ((this.UpdateTracDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTracDataCompleted(this, new UpdateTracDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTracDataAsync(string endoscop, string wareNo, string doctorName, string patientNO, string patientName, string nurseNO, string patientId) {
            this.UpdateTracDataAsync(endoscop, wareNo, doctorName, patientNO, patientName, nurseNO, patientId, null);
        }
        
        public void UpdateTracDataAsync(string endoscop, string wareNo, string doctorName, string patientNO, string patientName, string nurseNO, string patientId, object userState) {
            if ((this.onBeginUpdateTracDataDelegate == null)) {
                this.onBeginUpdateTracDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateTracData);
            }
            if ((this.onEndUpdateTracDataDelegate == null)) {
                this.onEndUpdateTracDataDelegate = new EndOperationDelegate(this.OnEndUpdateTracData);
            }
            if ((this.onUpdateTracDataCompletedDelegate == null)) {
                this.onUpdateTracDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTracDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTracDataDelegate, new object[] {
                        endoscop,
                        wareNo,
                        doctorName,
                        patientNO,
                        patientName,
                        nurseNO,
                        patientId}, this.onEndUpdateTracDataDelegate, this.onUpdateTracDataCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> LoadUserInfos(ClassLibrary.UserRole userRole) {
            return base.Channel.LoadUserInfos(userRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadUserInfos(ClassLibrary.UserRole userRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadUserInfos(userRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndLoadUserInfos(System.IAsyncResult result) {
            return base.Channel.EndLoadUserInfos(result);
        }
        
        private System.IAsyncResult OnBeginLoadUserInfos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClassLibrary.UserRole userRole = ((ClassLibrary.UserRole)(inValues[0]));
            return this.BeginLoadUserInfos(userRole, callback, asyncState);
        }
        
        private object[] OnEndLoadUserInfos(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndLoadUserInfos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadUserInfosCompleted(object state) {
            if ((this.LoadUserInfosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadUserInfosCompleted(this, new LoadUserInfosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadUserInfosAsync(ClassLibrary.UserRole userRole) {
            this.LoadUserInfosAsync(userRole, null);
        }
        
        public void LoadUserInfosAsync(ClassLibrary.UserRole userRole, object userState) {
            if ((this.onBeginLoadUserInfosDelegate == null)) {
                this.onBeginLoadUserInfosDelegate = new BeginOperationDelegate(this.OnBeginLoadUserInfos);
            }
            if ((this.onEndLoadUserInfosDelegate == null)) {
                this.onEndLoadUserInfosDelegate = new EndOperationDelegate(this.OnEndLoadUserInfos);
            }
            if ((this.onLoadUserInfosCompletedDelegate == null)) {
                this.onLoadUserInfosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadUserInfosCompleted);
            }
            base.InvokeAsync(this.onBeginLoadUserInfosDelegate, new object[] {
                        userRole}, this.onEndLoadUserInfosDelegate, this.onLoadUserInfosCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> LoadWareinfos() {
            return base.Channel.LoadWareinfos();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadWareinfos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadWareinfos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndLoadWareinfos(System.IAsyncResult result) {
            return base.Channel.EndLoadWareinfos(result);
        }
        
        private System.IAsyncResult OnBeginLoadWareinfos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadWareinfos(callback, asyncState);
        }
        
        private object[] OnEndLoadWareinfos(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndLoadWareinfos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadWareinfosCompleted(object state) {
            if ((this.LoadWareinfosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadWareinfosCompleted(this, new LoadWareinfosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadWareinfosAsync() {
            this.LoadWareinfosAsync(null);
        }
        
        public void LoadWareinfosAsync(object userState) {
            if ((this.onBeginLoadWareinfosDelegate == null)) {
                this.onBeginLoadWareinfosDelegate = new BeginOperationDelegate(this.OnBeginLoadWareinfos);
            }
            if ((this.onEndLoadWareinfosDelegate == null)) {
                this.onEndLoadWareinfosDelegate = new EndOperationDelegate(this.OnEndLoadWareinfos);
            }
            if ((this.onLoadWareinfosCompletedDelegate == null)) {
                this.onLoadWareinfosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadWareinfosCompleted);
            }
            base.InvokeAsync(this.onBeginLoadWareinfosDelegate, null, this.onEndLoadWareinfosDelegate, this.onLoadWareinfosCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> LoadEndsocopeNames() {
            return base.Channel.LoadEndsocopeNames();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadEndsocopeNames(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadEndsocopeNames(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndLoadEndsocopeNames(System.IAsyncResult result) {
            return base.Channel.EndLoadEndsocopeNames(result);
        }
        
        private System.IAsyncResult OnBeginLoadEndsocopeNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadEndsocopeNames(callback, asyncState);
        }
        
        private object[] OnEndLoadEndsocopeNames(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndLoadEndsocopeNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadEndsocopeNamesCompleted(object state) {
            if ((this.LoadEndsocopeNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadEndsocopeNamesCompleted(this, new LoadEndsocopeNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadEndsocopeNamesAsync() {
            this.LoadEndsocopeNamesAsync(null);
        }
        
        public void LoadEndsocopeNamesAsync(object userState) {
            if ((this.onBeginLoadEndsocopeNamesDelegate == null)) {
                this.onBeginLoadEndsocopeNamesDelegate = new BeginOperationDelegate(this.OnBeginLoadEndsocopeNames);
            }
            if ((this.onEndLoadEndsocopeNamesDelegate == null)) {
                this.onEndLoadEndsocopeNamesDelegate = new EndOperationDelegate(this.OnEndLoadEndsocopeNames);
            }
            if ((this.onLoadEndsocopeNamesCompletedDelegate == null)) {
                this.onLoadEndsocopeNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadEndsocopeNamesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadEndsocopeNamesDelegate, null, this.onEndLoadEndsocopeNamesDelegate, this.onLoadEndsocopeNamesCompletedDelegate, userState);
        }
        
        public bool EndoscopeIsQuality(string en) {
            return base.Channel.EndoscopeIsQuality(en);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEndoscopeIsQuality(string en, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEndoscopeIsQuality(en, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEndoscopeIsQuality(System.IAsyncResult result) {
            return base.Channel.EndEndoscopeIsQuality(result);
        }
        
        private System.IAsyncResult OnBeginEndoscopeIsQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string en = ((string)(inValues[0]));
            return this.BeginEndoscopeIsQuality(en, callback, asyncState);
        }
        
        private object[] OnEndEndoscopeIsQuality(System.IAsyncResult result) {
            bool retVal = this.EndEndoscopeIsQuality(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEndoscopeIsQualityCompleted(object state) {
            if ((this.EndoscopeIsQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EndoscopeIsQualityCompleted(this, new EndoscopeIsQualityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EndoscopeIsQualityAsync(string en) {
            this.EndoscopeIsQualityAsync(en, null);
        }
        
        public void EndoscopeIsQualityAsync(string en, object userState) {
            if ((this.onBeginEndoscopeIsQualityDelegate == null)) {
                this.onBeginEndoscopeIsQualityDelegate = new BeginOperationDelegate(this.OnBeginEndoscopeIsQuality);
            }
            if ((this.onEndEndoscopeIsQualityDelegate == null)) {
                this.onEndEndoscopeIsQualityDelegate = new EndOperationDelegate(this.OnEndEndoscopeIsQuality);
            }
            if ((this.onEndoscopeIsQualityCompletedDelegate == null)) {
                this.onEndoscopeIsQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEndoscopeIsQualityCompleted);
            }
            base.InvokeAsync(this.onBeginEndoscopeIsQualityDelegate, new object[] {
                        en}, this.onEndEndoscopeIsQualityDelegate, this.onEndoscopeIsQualityCompletedDelegate, userState);
        }
    }
}
