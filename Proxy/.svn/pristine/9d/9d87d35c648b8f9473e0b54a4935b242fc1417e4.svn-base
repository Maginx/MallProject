<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAA7KkAUOuqAN/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/rqgDf7KkAUAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOypAFDtrAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7KkAUAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA66oA3+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/rqgDfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADtrAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADrqgDf7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+uqAN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOuqAJ/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/66oAnwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7KkAUO2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/sqQBQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA66oA3+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/66oA3wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrqwBA7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/rqwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrqwCP7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/66sAjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADrqgCf7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+uqAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADrqwCP7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/rqwCPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrqwBA66oA3+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/rqgDf66sAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7KkAUOuqAJ/rqgDf7awA/+2s
        AP/trAD/7awA/+uqAN/rqgCf7KkAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADnpwAg66oAn+yrAO/trAD/7awA/+yrAO/rqgCf56cAIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6qoAMOyrAO/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/sqwDv6qoAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOenACDsqwDv7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/sqwDv56cAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA66oAn+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/rqgCfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsqwDv7awA/+2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+yrAO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO2s
        AP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADsqwDv7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+yr
        AO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOuqAJ/trAD/7awA/+2sAP/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/66oAnwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA56cAIOyrAO/trAD/7awA/+2sAP/trAD/7awA/+2s
        AP/trAD/7awA/+yrAO/npwAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6qoAMOyrAO/trAD/7awA/+2s
        AP/trAD/7awA/+2sAP/sqwDv6qoAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA56cAIOuq
        AJ/sqwDv7awA/+2sAP/sqwDv66oAn+enACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8AAA/+AAAH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/gAAB/4AAAf/AAAP/wA
        AD/+AAB//wAA///AA///8A/////////////////////////4H///8A///+AH///AA///wAP//8AD///A
        A///wAP//8AD///gB///8A////gf/w==
</value>
  </data>
</root>